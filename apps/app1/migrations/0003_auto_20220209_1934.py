# Generated by Django 3.0 on 2022-02-09 13:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app1', '0002_group_student'),
    ]

    operations = [
        migrations.AlterField(
            model_name='account',
            name='full_name',
            field=models.CharField(max_length=20, verbose_name='полное имя'),
        ),
        migrations.AlterField(
            model_name='account',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='пользователь'),
        ),
        migrations.AlterField(
            model_name='group',
            name='name',
            field=models.CharField(max_length=10, verbose_name='имя'),
        ),
        migrations.AlterField(
            model_name='student',
            name='account',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app1.Account', verbose_name='аккаунт'),
        ),
        migrations.AlterField(
            model_name='student',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app1.Group', verbose_name='группа'),
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=20, verbose_name='полное имя')),
                ('topic', models.CharField(choices=[('java', 'Java'), ('python', 'Python'), ('typescript', 'TypeScript'), ('javascript', 'JavaScript'), ('ruby', 'Ruby'), ('golang', 'GoLang'), ('sql', 'SQL'), ('swift', 'Swift'), ('php', 'PHP'), ('deplhi', 'Deplhi'), ('perl', 'Perl')], default='java', max_length=10, verbose_name='предмет')),
                ('students', models.ManyToManyField(to='app1.Student')),
            ],
            options={
                'verbose_name': 'Профессор',
                'verbose_name_plural': 'Профессоры',
                'ordering': ('topic',),
            },
        ),
    ]
